<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flat priors</title>
    <description>Musings on pharmacometrics &amp; clinical pharmacology, statistics, drug development, software engineering, innovation, and other random topics</description>
    <link>http://ronkeizer.github.io//</link>
    <atom:link href="http://ronkeizer.github.io//feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Visual predictive checks: &#39;the good, the bad, and the ugly&#39;</title>
        <description>&lt;p&gt;The VPC is the most commonly used diagnostic in pharmacometrics. That is not just my opinion, I also collected a bit of evidence: on a recent big pharmacometrics meeting (ACoP 2014) I noticed that about 90% of all posters that included model evaluation used a VPC to show model performance. The remainder 10% used either only standard GOF plots, while 1 poster showed prediction discrepancies (PDE, not NPDE).&lt;/p&gt;

&lt;p&gt;While the VPC is clearly the most widely used diagnostic on this side of the Atlantic, there is a huge variety in how these plots are displayed and what (dis-)information they show. The VPC easily has five fairly different versions that are all quite commonly presented. However, I feel that if it comes to usefulness and power, some versions should be counted as more equal than others…&lt;/p&gt;

&lt;h2 id=&quot;what-is-the-purpose-of-the-vpc&quot;&gt;What is the purpose of the VPC?&lt;/h2&gt;
&lt;p&gt;In my view, the purpose is to see if the model can predict, for the exact same design as the model, the longitudinal (or an independent variable other than time) trend of the observed data as well as its variability for the population. &lt;/p&gt;

&lt;p&gt;So &lt;strong&gt;error 1&lt;/strong&gt; in my view is when  &lt;/p&gt;

&lt;h2 id=&quot;what-should-the-vpc-show&quot;&gt;What should the VPC show?&lt;/h2&gt;
&lt;p&gt;Let me start with some examples of what I think are ‘VPC’ that are not showing the right information.&lt;/p&gt;

&lt;h2 id=&quot;what-should-the-vpc-show-1&quot;&gt;What should the VPC show?&lt;/h2&gt;

&lt;h2 id=&quot;binning&quot;&gt;Binning&lt;/h2&gt;
&lt;p&gt;In my opinion, a fully automated approach has both advantages as disadvantages. The advantages are obvious: it is user-independent, it is easier, binning can be pre-specified in analysis plans, etc. However, it also has an important drawback, as it withholds users from actually looking at the data and thinking about the bin placement themselves. This becomes more important when there are no or few very spread-out clusters in the data, which can e.g. occur with routinely collected clinical data. For such cases, I am not convinced that the automated approaches will always select more optimal binning approaches than manual binning, and I actually would like to have more control. At this point I don’t have a clear-cut example of where manual binning worked better, but I will post it here if I encounter one. &lt;/p&gt;

&lt;h2 id=&quot;the-ugly&quot;&gt;The ugly&lt;/h2&gt;
&lt;p&gt;Finally, besides showing the right information, don’t forget that it would be nice if the plots are aesthetically appealing. Please keep in mind that nobody wants to look at plots with bright green or purple colors (also read &lt;a href=&quot;http://www.edwardtufte.com/bboard/q-and-a-fetch-msg?msg_id=0000HT&quot;&gt;this&lt;/a&gt;), and please don’t overlay 12,000 datapoints over your prediction intervals… &lt;/p&gt;
</description>
        <pubDate>Sat, 22 Nov 2014 04:00:34 -0800</pubDate>
        <link>http://ronkeizer.github.io//nonmem/update/2014/11/22/vpc-good-bad-ugly/</link>
        <guid isPermaLink="true">http://ronkeizer.github.io//nonmem/update/2014/11/22/vpc-good-bad-ugly/</guid>
      </item>
    
      <item>
        <title>Upgrading NONMEM to Yosemite</title>
        <description>&lt;p&gt;Apple released their new OS (Yosemite) a few weeks ago. Unfortunately upgrading to the new system breaks the installation of NONMEM, PsN, and Pirana. Here’s what I did to get up and running again. Altogether this should take less than 20 minutes. &lt;em&gt;Please note that I cannot be held liable for any damage caused directly or indirectly by following the advice below!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;: You need to re-install gcc/gfortran. You can install from source, or from e.g. HomeBrew, but I just chose to take the binaries from &lt;a href=&quot;http://hpc.sourceforge.net/&quot;&gt;this page&lt;/a&gt; which had just updated their versions. Download gcc and gfortran for Yosemite. Then in the console run:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/Downloads
sudo tar -xvf gcc-5.0-bin.tar -C / 
sudo tar -xvf gfortran-5.0-bin.tar -C /&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;: Re-install the Apple developer tools for Yosemite. &lt;a href=&quot;https://developer.apple.com/downloads/index.action#&quot;&gt;Download&lt;/a&gt; and install the ones for OSX 10.10.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt;: Now you are ready to re-install NONMEM. I used:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /Users/ronkeizer/Dropbox/Software/NONMEM/nm730CD_essential
sudo /bin/bash SETUP73 /Users/ronkeizer/Dropbox/Software/NONMEM/nm730CD_essential /opt/NONMEM/nm73g gfortran y ar same rec i&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(But change the source and target folders to your own of course!)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4&lt;/strong&gt;: Don’t forget to update psn.conf if you installed to a new location. Use e.g.:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo nano /Library/Perl/5.16/PsN_4_2_0/psn.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;to edit the system-wide configuration file or&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;nano ~/psn.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;if you have a personal psn.conf file. Also, you might need to re-install some Perl modules for PsN:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo cpan -i Math::Random
sudo cpan -i Statistics::Distributions&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Step 5&lt;/strong&gt;: To make Pirana work again, the only thing you need to do is re-install XQuartz, download &lt;a href=&quot;http://xquartz.macosforge.org/landing/&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That’s all, folks!&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Nov 2014 02:49:34 -0800</pubDate>
        <link>http://ronkeizer.github.io//nonmem/update/2014/11/05/upgrading-to-yosemite/</link>
        <guid isPermaLink="true">http://ronkeizer.github.io//nonmem/update/2014/11/05/upgrading-to-yosemite/</guid>
      </item>
    
  </channel>
</rss>
